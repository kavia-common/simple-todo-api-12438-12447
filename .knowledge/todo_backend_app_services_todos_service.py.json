{"is_source_file": true, "format": "Python", "description": "This file contains service functions for CRUD operations on a 'todos' database table, including functions to list, create, retrieve, update, and delete todo items. It interacts directly with an SQL database via SQLAlchemy.", "external_files": ["sqlalchemy", "sqlalchemy.orm"], "external_methods": ["text", "Session.execute", "Session.commit"], "published": ["list_todos", "create_todo", "get_todo", "update_todo", "delete_todo"], "classes": [], "methods": [{"name": "Dict _row_to_dict(row)", "description": "Converts a SQLAlchemy Row object into a dictionary.", "scope": "", "scopeKind": ""}, {"name": "List[Dict] list_todos(db: Session)", "description": "Retrieves all todo items from the database, ordered by ID.", "scope": "", "scopeKind": ""}, {"name": "Dict create_todo(db: Session, title: str, description: str = \"\", status: str = \"pending\")", "description": "Creates a new todo item with the specified title, description, and status.", "scope": "", "scopeKind": ""}, {"name": "Optional[Dict] get_todo(db: Session, todo_id: int)", "description": "Fetches a single todo item by its ID.", "scope": "", "scopeKind": ""}, {"name": "Optional[Dict] update_todo( db: Session, todo_id: int, fields: Dict )", "description": "Updates fields of an existing todo item given its ID.", "scope": "", "scopeKind": ""}, {"name": "bool delete_todo(db: Session, todo_id: int)", "description": "Deletes a todo item by its ID.", "scope": "", "scopeKind": ""}], "calls": ["db.execute", "db.commit", "dict", "res.mappings().all()", "res.mappings().first()", "res.rowcount"], "search-terms": ["todos_service", "CRUD operations", "SQLAlchemy database interaction", "session management", "sql update", "sql select"], "state": 2, "file_id": 9, "knowledge_revision": 19, "git_revision": "", "ctags": [{"_type": "tag", "name": "_row_to_dict", "path": "/home/kavia/workspace/code-generation/simple-todo-api-12438-12447/todo_backend/app/services/todos_service.py", "pattern": "/^def _row_to_dict(row) -> Dict:$/", "language": "Python", "typeref": "typename:Dict", "kind": "function", "signature": "(row)"}, {"_type": "tag", "name": "create_todo", "path": "/home/kavia/workspace/code-generation/simple-todo-api-12438-12447/todo_backend/app/services/todos_service.py", "pattern": "/^def create_todo(db: Session, title: str, description: str = \"\", status: str = \"pending\") -> Dict/", "language": "Python", "typeref": "typename:Dict", "kind": "function", "signature": "(db: Session, title: str, description: str = \"\", status: str = \"pending\")"}, {"_type": "tag", "name": "delete_todo", "path": "/home/kavia/workspace/code-generation/simple-todo-api-12438-12447/todo_backend/app/services/todos_service.py", "pattern": "/^def delete_todo(db: Session, todo_id: int) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "function", "signature": "(db: Session, todo_id: int)"}, {"_type": "tag", "name": "get_todo", "path": "/home/kavia/workspace/code-generation/simple-todo-api-12438-12447/todo_backend/app/services/todos_service.py", "pattern": "/^def get_todo(db: Session, todo_id: int) -> Optional[Dict]:$/", "language": "Python", "typeref": "typename:Optional[Dict]", "kind": "function", "signature": "(db: Session, todo_id: int)"}, {"_type": "tag", "name": "list_todos", "path": "/home/kavia/workspace/code-generation/simple-todo-api-12438-12447/todo_backend/app/services/todos_service.py", "pattern": "/^def list_todos(db: Session) -> List[Dict]:$/", "language": "Python", "typeref": "typename:List[Dict]", "kind": "function", "signature": "(db: Session)"}, {"_type": "tag", "name": "update_todo", "path": "/home/kavia/workspace/code-generation/simple-todo-api-12438-12447/todo_backend/app/services/todos_service.py", "pattern": "/^def update_todo($/", "language": "Python", "typeref": "typename:Optional[Dict]", "kind": "function", "signature": "( db: Session, todo_id: int, fields: Dict )"}], "hash": "051ad7ff5e36ab36179bf1151d0f4773", "format-version": 4, "code-base-name": "todo_backend", "filename": "todo_backend/app/services/todos_service.py", "revision_history": [{"19": ""}]}